1、统一报错

2、未登录统一拦截

3、请求值、返回值统一处理





1、开发上线的不同阶段，需要不同配置
2、不同的跨域方式 配置不同
3、打包的时候统一注入环境参数，统一管理环境，输出不同的版本包。


1、本地创建json
2、easy-mock平台
3、集成Mock API
 //请求本地文件中的json数据文件      因为是json静态文件所有在public下创建的mock文件存储json数据
    // this.axios.get('/mock/user/info.json').then((response)=>{
    //   this.res = response;
    // })

    //请求easyMock中的模拟接口数据
    // this.axios.get('/member/list').then((res)=>{
    //   console.log(res);
    //   this.res = res;
    // })

    //使用继承mockApi进行模拟数据  在src创建mock文件下封装的mockApi   特定就是请求的时候会被拦截所有notwoke下面是没有请求记录的
    // this.axios.get('/user/info').then((res)=>{
    //   this.res = res
    // })